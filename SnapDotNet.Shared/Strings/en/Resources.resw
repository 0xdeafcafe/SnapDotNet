<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppBarRefresh.Label" xml:space="preserve">
    <value>refresh</value>
  </data>
  <data name="AppBarSettings.Label" xml:space="preserve">
    <value>settings</value>
  </data>
  <data name="Birthday.Header" xml:space="preserve">
    <value>Birthday</value>
  </data>
  <data name="BottomAppBarHint.[using:Windows.UI.Xaml.Controls]ToolTipService.ToolTip" xml:space="preserve">
    <value>Show more commands (Windows logo key+Z, or right-click)</value>
  </data>
  <data name="CreateAccountButton.Content" xml:space="preserve">
    <value>register</value>
  </data>
  <data name="Disclaimer.Text" xml:space="preserve">
    <value>This is a third-party Snapchat client, and is not endorsed by Snapchat, Inc.</value>
  </data>
  <data name="Email.Header" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="FriendBestFriends.Text" xml:space="preserve">
    <value>best friends:</value>
  </data>
  <data name="FriendFullStory.Text" xml:space="preserve">
    <value>full story:</value>
  </data>
  <data name="FriendsBlocked.Header" xml:space="preserve">
    <value>BLOCKED</value>
  </data>
  <data name="FriendScore.Text" xml:space="preserve">
    <value>snapchat score:</value>
  </data>
  <data name="FriendSearchBox.PlaceholderText" xml:space="preserve">
    <value>Search friends</value>
  </data>
  <data name="FriendsFriends.Header" xml:space="preserve">
    <value>FRIENDS</value>
  </data>
  <data name="FriendsPending.Header" xml:space="preserve">
    <value>PENDING</value>
  </data>
  <data name="FriendsSocial.Header" xml:space="preserve">
    <value>social</value>
  </data>
  <data name="InfoHubSection.Header" xml:space="preserve">
    <value>INFO</value>
  </data>
  <data name="MainPageAppTitle" xml:space="preserve">
    <value>snapchat</value>
  </data>
  <data name="MainPageHub.Header" xml:space="preserve">
    <value>Snapchat</value>
  </data>
  <data name="NoAcceptedFriendsMessage.Text" xml:space="preserve">
    <value>You have no friends.. Need a hand?</value>
  </data>
  <data name="NoBlockedFriendsMessage.Text" xml:space="preserve">
    <value>You have no blocked friends.. Great job!</value>
  </data>
  <data name="NoPendingFriendsMessage.Text" xml:space="preserve">
    <value>You have no pending friends..</value>
  </data>
  <data name="PasswordBox.Header" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PreviewAccept.Label" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="PreviewFilters.Label" xml:space="preserve">
    <value>Filters</value>
  </data>
  <data name="PreviewReject.Label" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="PreviewTimer.Label" xml:space="preserve">
    <value>Timer</value>
  </data>
  <data name="RegistrationBirthday.Text" xml:space="preserve">
    <value>birthday</value>
  </data>
  <data name="RegistrationContinueButton.Content" xml:space="preserve">
    <value>continue</value>
  </data>
  <data name="RegistrationEmailTitle.Text" xml:space="preserve">
    <value>email</value>
  </data>
  <data name="RegistrationHeader.Text" xml:space="preserve">
    <value>register for snapchat</value>
  </data>
  <data name="RegistrationPassword.Text" xml:space="preserve">
    <value>password</value>
  </data>
  <data name="SettingsAppSpecific.Header" xml:space="preserve">
    <value>APP SPECIFIC</value>
  </data>
  <data name="SettingsAutoDownload.Header" xml:space="preserve">
    <value>auto download snaps</value>
  </data>
  <data name="SettingsBFFCount.Header" xml:space="preserve">
    <value>number of best friends</value>
  </data>
  <data name="SettingsEmail.Header" xml:space="preserve">
    <value>email address</value>
  </data>
  <data name="SettingsHeader.Header" xml:space="preserve">
    <value>settings</value>
  </data>
  <data name="SettingsInviteCode.Header" xml:space="preserve">
    <value>Invite Code:</value>
  </data>
  <data name="SettingsNotifications.Header" xml:space="preserve">
    <value>NOTIFICATIONS</value>
  </data>
  <data name="SettingsNotificationsAuthToken.Text" xml:space="preserve">
    <value>This feature requires that we store your Snapchat Authentiction Token on our secure azure mobile service, to make requests to get updates. If you are not happy with this, please don't use this feature.</value>
  </data>
  <data name="SettingsNotificationsBadFriend.Text" xml:space="preserve">
    <value>(lets face it, you should probally stop talking to them).</value>
  </data>
  <data name="SettingsNotificationsPN.Text" xml:space="preserve">
    <value>This application has Push Notifications (the little toasts that appear at the top of the screen) to let you know you have received a new snap, friend or a bad friend has screenshotted your snap</value>
  </data>
  <data name="SettingsNotificationsPNInviteOnly.Text" xml:space="preserve">
    <value>This feature is currently invite only as it's in the test phase. So if you have an invite code, enter it below.</value>
  </data>
  <data name="SettingsNotificationsPNRequest.Text" xml:space="preserve">
    <value>Otherwise click the button below to request one.</value>
  </data>
  <data name="SettingsPersonal.Header" xml:space="preserve">
    <value>PERSONAL</value>
  </data>
  <data name="SettingsPhone.Header" xml:space="preserve">
    <value>phone number</value>
  </data>
  <data name="SettingsPrivacy.Header" xml:space="preserve">
    <value>PRIVACY</value>
  </data>
  <data name="SettingsRegisterPN.Content" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="SettingsRequestPNCode.Content" xml:space="preserve">
    <value>Request Invite Code</value>
  </data>
  <data name="SettingsSnapPrivacy.Header" xml:space="preserve">
    <value>who can send you snaps</value>
  </data>
  <data name="SettingsStoryPrivacy.Header" xml:space="preserve">
    <value>who can see your story</value>
  </data>
  <data name="SettingsWelcome.Text" xml:space="preserve">
    <value>welcome</value>
  </data>
  <data name="SignInButton.Content" xml:space="preserve">
    <value>sign in</value>
  </data>
  <data name="SignInHeader.Text" xml:space="preserve">
    <value>sign in to snapchat</value>
  </data>
  <data name="SignInPassword.Text" xml:space="preserve">
    <value>password</value>
  </data>
  <data name="SignInUsername.Header" xml:space="preserve">
    <value>username or email</value>
  </data>
  <data name="SignInUsernameTitle.Text" xml:space="preserve">
    <value>username or email</value>
  </data>
  <data name="Snaps.Text" xml:space="preserve">
    <value>SNAPS</value>
  </data>
  <data name="SnapStatusDelivered" xml:space="preserve">
    <value>Delivered</value>
  </data>
  <data name="SnapStatusDownloading" xml:space="preserve">
    <value>Downloading</value>
  </data>
  <data name="SnapStatusOpened" xml:space="preserve">
    <value>Opened</value>
  </data>
  <data name="SnapStatusScreenshotted" xml:space="preserve">
    <value>Screenshot!</value>
  </data>
  <data name="SnapStatusSent" xml:space="preserve">
    <value>Sent</value>
  </data>
  <data name="SnapStatusTapAndHold" xml:space="preserve">
    <value>Tap and hold to view</value>
  </data>
  <data name="SnapStatusTapToLoad" xml:space="preserve">
    <value>Tap to load</value>
  </data>
  <data name="StartPageThirdParty.Text" xml:space="preserve">
    <value>unofficial snapchat client</value>
  </data>
  <data name="StartPageTitle.Text" xml:space="preserve">
    <value>Snapchat for Windows</value>
  </data>
  <data name="SettingsSignOut.Label" xml:space="preserve">
    <value>sign out</value>
  </data>
  <data name="Block" xml:space="preserve">
    <value>Block</value>
  </data>
  <data name="BlockingDialogBody" xml:space="preserve">
    <value>You will no longer recieve snaps from this person. But you can undo this action at any time.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangeDisplay" xml:space="preserve">
    <value>Change Display Name</value>
  </data>
  <data name="ChangeDisplayNameDialog.PrimaryButtonText" xml:space="preserve">
    <value>change</value>
  </data>
  <data name="ChangeDisplayNameDialog.SecondaryButtonText" xml:space="preserve">
    <value>cancel</value>
  </data>
  <data name="ChangeDisplayNameDialog.Title" xml:space="preserve">
    <value>CHANGE DISPLAY NAME</value>
  </data>
  <data name="DisplayChangeWarningRun1.Text" xml:space="preserve">
    <value>Changing this will change how your friend's name displayed in the application. It will not change his account in anyway.</value>
  </data>
  <data name="DisplayChangeWarningRun2.Text" xml:space="preserve">
    <value>To remove a display name, just change it to an empty name.</value>
  </data>
  <data name="DisplayChangeWarningRun3.Text" xml:space="preserve">
    <value>This can be un-done or changed at any time.</value>
  </data>
  <data name="DisplyNameTextBox.Header" xml:space="preserve">
    <value>new display name</value>
  </data>
  <data name="GenericCautionDialogHeader" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="InvalidCredentialsBody" xml:space="preserve">
    <value>The username and password combination you used to sign into snapchat is not correct.</value>
  </data>
  <data name="InvalidCredentialsHeader" xml:space="preserve">
    <value>Invalid Username/Password</value>
  </data>
  <data name="InvalidHttpBody" xml:space="preserve">
    <value>Unable to connect to Snapchat. The server responded:</value>
  </data>
  <data name="InvalidHttpHeader" xml:space="preserve">
    <value>Unable to connect to Snapchat</value>
  </data>
  <data name="LoggingOut" xml:space="preserve">
    <value>Logging Out...</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RemovingDialogBody" xml:space="preserve">
    <value>This person will no longer appear on your friends list, but you might still get snaps from them depending on your privacy settings.</value>
  </data>
  <data name="SigningIn" xml:space="preserve">
    <value>Signing in...</value>
  </data>
  <data name="StatusBarBlocking" xml:space="preserve">
    <value>Blocking...</value>
  </data>
  <data name="StatusBarChangeDisplay" xml:space="preserve">
    <value>Changing Display Name...</value>
  </data>
  <data name="StatusBarRemoving" xml:space="preserve">
    <value>Removing...</value>
  </data>
  <data name="StatusBarUnblocking" xml:space="preserve">
    <value>Unblocking...</value>
  </data>
  <data name="UnauthorizedBody" xml:space="preserve">
    <value>Your sign in infomation has expired. Please sign in again.</value>
  </data>
  <data name="UnauthorizedHeader" xml:space="preserve">
    <value>You are Unauthorized</value>
  </data>
  <data name="Unblock" xml:space="preserve">
    <value>Unblock</value>
  </data>
  <data name="UnblockingDialogBody" xml:space="preserve">
    <value>You will now recieve snaps from this person. But you can redo this action at any time.</value>
  </data>
  <data name="Updating" xml:space="preserve">
    <value>Updating...</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="EmptyEmailBody" xml:space="preserve">
    <value>Please enter an email address.</value>
  </data>
  <data name="EmptyEmailHeader" xml:space="preserve">
    <value>No Email Entered</value>
  </data>
  <data name="EmptyPasswordBody" xml:space="preserve">
    <value>Please enter a password.</value>
  </data>
  <data name="EmptyPasswordHeader" xml:space="preserve">
    <value>No Password Entered</value>
  </data>
  <data name="RegistrationErrorHeader" xml:space="preserve">
    <value>Registration Failed</value>
  </data>
  <data name="CaptchaHeader.Text" xml:space="preserve">
    <value>select all images
  containing a ghost</value>
  </data>
</root>