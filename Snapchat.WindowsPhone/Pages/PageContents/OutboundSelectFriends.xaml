<UserControl
	x:Class="Snapchat.Pages.PageContents.OutboundSelectFriends"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:converters="using:Snapchat.Converters"
	xmlns:outboundSelectFriends="using:Snapchat.Converters.OutboundSelectFriends">

	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="../../Controls/ExpanderView.xaml"/>
				<ResourceDictionary Source="../../Controls/SearchTextBox.xaml"/>
			</ResourceDictionary.MergedDictionaries>

			<converters:CaseConverter x:Key="UpperCaseConverter" SelectedCase="Uppercase" />
			<converters:CaseConverter x:Key="LowerCaseConverter" SelectedCase="Lowercase" />

			<outboundSelectFriends:SelectedItemToFriendlyTextConverter x:Key="SelectedItemToFriendlyTextConverter" />
			<outboundSelectFriends:ItemBackgroundFromSelectionConverter x:Key="ItemBackgroundFromSelectionConverter"/>
			<outboundSelectFriends:ItemFontWeightFromSelectionConverter x:Key="ItemFontWeightFromSelectionConverter" />
			<converters:IntegerToVisibilityConverter x:Key="IntegerToVisibilityConverter" />

			<converters:EmptyGroupToColourConverter x:Key="EmptyGroupToColourConverterBackground"
													TrueBrush="#FF9b55a0" FalseBrush="#AA9b55a0"/>

			<CollectionViewSource x:Key="SortedRecipients" 
								  Source="{Binding Path=FriendsCollection}"
								  IsSourceGrouped="True"/>

			<DataTemplate x:Key="RecipientsListJumpTemplate">
				<Border Padding="5">
					<Border Background="{Binding Path=Group.Count, Converter={StaticResource EmptyGroupToColourConverterBackground}}" 
							Width="82" Height="82" HorizontalAlignment="Left">
						<TextBlock Text="{Binding Path=Group.Key, Converter={StaticResource LowerCaseConverter}}" 
								   Foreground="White" 
								   FontSize="48" Margin="5,3,3,3"
								   HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
					</Border>
				</Border>
			</DataTemplate>
			<DataTemplate x:Key="RecipientsListItemTemplate">
				<Border Height="60" BorderBrush="#eeeeee" BorderThickness="0,0,0,1" HorizontalAlignment="Stretch"
						Background="{Binding Path=Selected, Converter={StaticResource ItemBackgroundFromSelectionConverter}}">
					<Grid x:Name="ItemGrid" Background="Transparent" IsHitTestVisible="True"
						  HorizontalAlignment="Stretch">
						<TextBlock FontWeight="{Binding Path=Selected, Converter={StaticResource ItemFontWeightFromSelectionConverter}}" Margin="18,0,0,0"
								   Text="{Binding Converter={StaticResource SelectedItemToFriendlyTextConverter}, FallbackValue='Alex Reed'}"
								   FontSize="20" Foreground="#FF000000" FontFamily="Segoe WP"
								   VerticalAlignment="Center" HorizontalAlignment="Left" />
						<CheckBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
								  IsChecked="{Binding Path=Selected, Mode=TwoWay}"
								  Checked="FriendsBox_OnCheckChanged" Unchecked="FriendsBox_OnCheckChanged">
							<CheckBox.Resources>
								<Style  TargetType="CheckBox">
									<Setter Property="HorizontalContentAlignment" Value="Left"/>
									<Setter Property="VerticalContentAlignment" Value="Top"/>
									<Setter Property="HorizontalAlignment" Value="Left"/>
									<Setter Property="VerticalAlignment" Value="Top"/>
									<Setter Property="Padding" Value="{ThemeResource CheckBoxAndRadioButtonTextPaddingThickness}"/>
									<Setter Property="MinWidth" Value="25.5"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="CheckBox">
												<Grid Background="Transparent" 
													  VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="MouseOver"/>
															<VisualState x:Name="PointerOver"/>
															<VisualState x:Name="Pressed" />
															<VisualState x:Name="Disabled" />
														</VisualStateGroup>
														<VisualStateGroup x:Name="CheckStates">
															<VisualState x:Name="Checked">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CheckGlyph">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CheckBackground">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Unchecked"/>
															<VisualState x:Name="Indeterminate">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="NormalRectangle">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Grid x:Name="Grid" Margin="0"
														  VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
														  Background="Transparent" IsHitTestVisible="True">
														<Grid VerticalAlignment="Center" HorizontalAlignment="Right"
															  Height="25.5" Width="25.5"
															  Margin="0,0,25,0">
															<Border x:Name="UnCheckBackground" BorderBrush="#FFd9d7d7" 
																	BorderThickness="1" 
																	CornerRadius="4"
																	Background="Transparent" 
																	HorizontalAlignment="Left" Height="25.5" IsHitTestVisible="False" 
																	VerticalAlignment="Center" Width="25.5"/>
															<Border x:Name="CheckBackground" BorderBrush="#FF3cb2e2" 
																	BorderThickness="1" 
																	CornerRadius="4"
																	Background="#FF3cb2e2" 
																	HorizontalAlignment="Left" Height="25.5" IsHitTestVisible="False" 
																	VerticalAlignment="Center" Width="25.5"
																	Visibility="Collapsed"/>

															<Path x:Name="CheckGlyph" Margin="2,0,0,0"
																  Data="M 0,6 L 6,12 16,2 M 0,0 z" 
																  Stroke="#FFFFFFFF" HorizontalAlignment="Center" Height="13" 
																  IsHitTestVisible="False" StrokeThickness="1" 
																  StrokeLineJoin="Round" Visibility="Collapsed" VerticalAlignment="Center" 
																  Width="18.5"/>
														</Grid>
													</Grid>
												</Grid>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</CheckBox.Resources>
						</CheckBox>
					</Grid>
				</Border>
			</DataTemplate>
			<DataTemplate x:Key="RecipientsListGroupHeaderTemplate">
				<Border Background="Transparent" Height="30"
						HorizontalAlignment="Stretch">
					<TextBlock Text="{Binding Path=Key, Converter={StaticResource UpperCaseConverter}, FallbackValue='A'}" Foreground="#FF4ebce8" FontSize="15"
							   FontWeight="Bold" Margin="18,0,0,0" 
							   FontFamily="Segoe WP"
							   HorizontalAlignment="Left" VerticalAlignment="Center"/>
				</Border>
			</DataTemplate>

			<Style x:Key="CheckBoxStyle" TargetType="CheckBox">
				<Setter Property="HorizontalContentAlignment" Value="Left"/>
				<Setter Property="VerticalContentAlignment" Value="Top"/>
				<Setter Property="HorizontalAlignment" Value="Left"/>
				<Setter Property="VerticalAlignment" Value="Top"/>
				<Setter Property="Padding" Value="{ThemeResource CheckBoxAndRadioButtonTextPaddingThickness}"/>
				<Setter Property="MinWidth" Value="25.5"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="CheckBox">
							<Grid Background="Transparent" 
								  VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualState x:Name="Normal"/>
										<VisualState x:Name="MouseOver"/>
										<VisualState x:Name="PointerOver"/>
										<VisualState x:Name="Pressed" />
										<VisualState x:Name="Disabled" />
									</VisualStateGroup>
									<VisualStateGroup x:Name="CheckStates">
										<VisualState x:Name="Checked">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CheckGlyph">
													<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CheckBackground">
													<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Unchecked"/>
										<VisualState x:Name="Indeterminate">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="NormalRectangle">
													<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Grid x:Name="Grid" Margin="0"
														  VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
														  Background="Transparent" IsHitTestVisible="True">
									<Grid VerticalAlignment="Center" HorizontalAlignment="Right"
															  Height="25.5" Width="25.5"
															  Margin="0,0,25,0">
										<Border x:Name="UnCheckBackground" BorderBrush="#FFd9d7d7" 
																	BorderThickness="1" 
																	CornerRadius="4"
																	Background="Transparent" 
																	HorizontalAlignment="Left" Height="25.5" IsHitTestVisible="False" 
																	VerticalAlignment="Center" Width="25.5"/>
										<Border x:Name="CheckBackground" BorderBrush="#FF3cb2e2" 
																	BorderThickness="1" 
																	CornerRadius="4"
																	Background="#FF3cb2e2" 
																	HorizontalAlignment="Left" Height="25.5" IsHitTestVisible="False" 
																	VerticalAlignment="Center" Width="25.5"
																	Visibility="Collapsed"/>

										<Path x:Name="CheckGlyph" Margin="2,0,0,0"
																  Data="M 0,6 L 6,12 16,2 M 0,0 z" 
																  Stroke="#FFFFFFFF" HorizontalAlignment="Center" Height="13" 
																  IsHitTestVisible="False" StrokeThickness="1" 
																  StrokeLineJoin="Round" Visibility="Collapsed" VerticalAlignment="Center" 
																  Width="18.5"/>
									</Grid>
								</Grid>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="EmptyButtonStyle" TargetType="Button">
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="Padding" Value="5"/>
				<Setter Property="MinHeight" Value="0"/>
				<Setter Property="MinWidth" Value="0"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Button">
							<Grid x:Name="Grid" IsHitTestVisible="True" Background="Transparent">
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualState x:Name="Normal">
											<Storyboard>
												<DoubleAnimation Duration="0:0:0.2" To="1" 
																 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" 
																 Storyboard.TargetName="InnerGrid">
													<DoubleAnimation.EasingFunction>
														<BackEase Amplitude="1" EasingMode="EaseOut"/>
													</DoubleAnimation.EasingFunction>
												</DoubleAnimation>
												<DoubleAnimation Duration="0:0:0.2" To="1" 
																 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" 
																 Storyboard.TargetName="InnerGrid">
													<DoubleAnimation.EasingFunction>
														<BackEase Amplitude="1" EasingMode="EaseOut"/>
													</DoubleAnimation.EasingFunction>
												</DoubleAnimation>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Pressed">
											<Storyboard>
												<DoubleAnimation Duration="0:0:0.2" To="1.4" 
																 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" 
																 Storyboard.TargetName="InnerGrid">
													<DoubleAnimation.EasingFunction>
														<BackEase Amplitude="1" EasingMode="EaseOut"/>
													</DoubleAnimation.EasingFunction>
												</DoubleAnimation>
												<DoubleAnimation Duration="0:0:0.2" To="1.4" 
																 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" 
																 Storyboard.TargetName="InnerGrid">
													<DoubleAnimation.EasingFunction>
														<BackEase Amplitude="1" EasingMode="EaseOut"/>
													</DoubleAnimation.EasingFunction>
												</DoubleAnimation>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
								<Grid x:Name="InnerGrid" RenderTransformOrigin="0.5,0.5">
									<Grid.RenderTransform>
										<CompositeTransform ScaleX="1" ScaleY="1" />
									</Grid.RenderTransform>
									<ContentPresenter x:Name="ContentPresenter" 
												  AutomationProperties.AccessibilityView="Raw" 
												  ContentTemplate="{TemplateBinding ContentTemplate}" 
												  Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" 
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
												  Margin="{TemplateBinding Padding}" 
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
									</ContentPresenter>
								</Grid>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>

	<Grid Background="White">
		<Grid.RowDefinitions>
			<RowDefinition Height="80" />
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<Grid Background="#FF3cb2e2" Grid.Row="0">
			<TextBlock x:Uid="OutboundSelectFriendsPageTitleTextBlock"
					   Text="send to..."
					   Foreground="White" 
					   VerticalAlignment="Bottom" HorizontalAlignment="Left"
					   Margin="15,0,0,0" FontWeight="Light"
					   FontFamily="Segoe WP" FontSize="40" 
					   DoubleTapped="HeaderTextBlock_OnDoubleTapped"/>

			<ContentControl Width="25" Height="23" Template="{StaticResource AddFriendIcon}"
							VerticalAlignment="Bottom" HorizontalAlignment="Right"
							Margin="0,0,10,10"/>
		</Grid>

		<SemanticZoom Grid.Row="1" MinHeight="10" Margin="0,0,0,60">
			<SemanticZoom.ZoomedInView>
				<ListView x:Name="RecipientsListView" IsHoldingEnabled="True"
						  ItemsSource="{Binding Source={StaticResource SortedRecipients}}"
						  ItemTemplate="{StaticResource RecipientsListItemTemplate}">
					<ListView.Template>
						<ControlTemplate TargetType="ListView">
							<ScrollViewer>
								<StackPanel>
									<!-- Search box -->
									<!--
										<TextBox Background="White" x:Name="SearchBox" x:Uid="ConvosSearchBox" PlaceholderText="Search" 
												 Style="{StaticResource SearchTextBoxStyle}"/>
									-->

									<!-- Show Stories -->
									<StackPanel Visibility="{Binding Path=StoriesCollection.Count, Converter={StaticResource IntegerToVisibilityConverter}}">
										<Border Height="30" HorizontalAlignment="Stretch">
											<TextBlock x:Uid="OutboundStoriesHeader" Text="STORIES" Foreground="#FF4ebce8" FontSize="15"
													   FontWeight="Bold" Margin="18,0,0,0"
													   FontFamily="Segoe WP"
													   HorizontalAlignment="Left" VerticalAlignment="Center"/>
										</Border>
										<ItemsControl ItemsSource="{Binding Path=StoriesCollection}">
											<ItemsControl.ItemTemplate>
												<DataTemplate>
													<Border Height="60" BorderBrush="#eeeeee" BorderThickness="0,0,0,1" HorizontalAlignment="Stretch"
															Background="{Binding Path=Selected, Converter={StaticResource ItemBackgroundFromSelectionConverter}}">
														<Grid x:Name="ItemGrid" Background="Transparent" IsHitTestVisible="True"
															  HorizontalAlignment="Stretch">
															<TextBlock FontWeight="{Binding Path=Selected, Converter={StaticResource ItemFontWeightFromSelectionConverter}}"  Margin="18,0,0,0"
																	   Text="{Binding Converter={StaticResource SelectedItemToFriendlyTextConverter}, FallbackValue='Alex Reed'}"
																	   FontSize="20" Foreground="#FF000000" 
																	   VerticalAlignment="Center" HorizontalAlignment="Left" />
															<CheckBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
																	  Checked="StoryBox_OnCheckChanged" Unchecked="StoryBox_OnCheckChanged"
																	  IsChecked="{Binding Path=Selected, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}" />
														</Grid>
													</Border>
												</DataTemplate>
											</ItemsControl.ItemTemplate>
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<VirtualizingStackPanel/>
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
										</ItemsControl>
									</StackPanel>
									
									<!-- Show Best Friends -->
									<StackPanel Visibility="{Binding Path=BestFriendsCollection.Count, Converter={StaticResource IntegerToVisibilityConverter}}">
										<Border Height="30" HorizontalAlignment="Stretch">
											<TextBlock x:Uid="OutboundBestFriendHeader" Text="BEST FRIENDS" Foreground="#FF4ebce8" FontSize="15"
													   FontWeight="Bold" Margin="18,0,0,0"
													   FontFamily="Segoe WP"
													   HorizontalAlignment="Left" VerticalAlignment="Center"/>
										</Border>
										<ItemsControl ItemsSource="{Binding Path=BestFriendsCollection}">
											<ItemsControl.ItemTemplate>
												<DataTemplate>
													<Border Height="60" BorderBrush="#eeeeee" BorderThickness="0,0,0,1" HorizontalAlignment="Stretch"
															Background="{Binding Path=Selected, Converter={StaticResource ItemBackgroundFromSelectionConverter}}">
														<Grid x:Name="ItemGrid" Background="Transparent" IsHitTestVisible="True"
															  HorizontalAlignment="Stretch">
															<TextBlock FontWeight="{Binding Path=Selected, Converter={StaticResource ItemFontWeightFromSelectionConverter}}"  Margin="18,0,0,0"
																	   Text="{Binding Converter={StaticResource SelectedItemToFriendlyTextConverter}, FallbackValue='Alex Reed'}"
																	   FontSize="20" Foreground="#FF000000" 
																	   VerticalAlignment="Center" HorizontalAlignment="Left" />
															<CheckBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
																	  IsChecked="{Binding Path=Selected, Mode=TwoWay}"
																	  Checked="BestFriendsBox_OnCheckChanged" Unchecked="BestFriendsBox_OnCheckChanged">
																<CheckBox.Resources>
																	<Style TargetType="CheckBox">
																		<Setter Property="HorizontalContentAlignment" Value="Left"/>
																		<Setter Property="VerticalContentAlignment" Value="Top"/>
																		<Setter Property="HorizontalAlignment" Value="Left"/>
																		<Setter Property="VerticalAlignment" Value="Top"/>
																		<Setter Property="Padding" Value="{ThemeResource CheckBoxAndRadioButtonTextPaddingThickness}"/>
																		<Setter Property="MinWidth" Value="25.5"/>
																		<Setter Property="Template">
																			<Setter.Value>
																				<ControlTemplate TargetType="CheckBox">
																					<Grid Background="Transparent" 
																						  VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
																						<VisualStateManager.VisualStateGroups>
																							<VisualStateGroup x:Name="CommonStates">
																								<VisualState x:Name="Normal"/>
																								<VisualState x:Name="MouseOver"/>
																								<VisualState x:Name="PointerOver"/>
																								<VisualState x:Name="Pressed" />
																								<VisualState x:Name="Disabled" />
																							</VisualStateGroup>
																							<VisualStateGroup x:Name="CheckStates">
																								<VisualState x:Name="Checked">
																									<Storyboard>
																										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CheckGlyph">
																											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
																										</ObjectAnimationUsingKeyFrames>
																										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="CheckBackground">
																											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
																										</ObjectAnimationUsingKeyFrames>
																									</Storyboard>
																								</VisualState>
																								<VisualState x:Name="Unchecked"/>
																								<VisualState x:Name="Indeterminate">
																									<Storyboard>
																										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="NormalRectangle">
																											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
																										</ObjectAnimationUsingKeyFrames>
																									</Storyboard>
																								</VisualState>
																							</VisualStateGroup>
																						</VisualStateManager.VisualStateGroups>
																						<Grid x:Name="Grid" Margin="0"
																							  VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
																							  Background="Transparent" IsHitTestVisible="True">
																							<Grid VerticalAlignment="Center" HorizontalAlignment="Right"
																								  Height="25.5" Width="25.5"
																								  Margin="0,0,25,0">
																								<Border x:Name="UnCheckBackground" BorderBrush="#FFd9d7d7" 
																										BorderThickness="1" 
																										CornerRadius="4"
																										Background="Transparent" 
																										HorizontalAlignment="Left" Height="25.5" IsHitTestVisible="False" 
																										VerticalAlignment="Center" Width="25.5"/>
																								<Border x:Name="CheckBackground" BorderBrush="#FFffcf33" 
																										BorderThickness="1" 
																										CornerRadius="4"
																										Background="#FFffcf33" 
																										HorizontalAlignment="Left" Height="25.5" IsHitTestVisible="False" 
																										VerticalAlignment="Center" Width="25.5"
																										Visibility="Collapsed"/>

																								<Viewbox x:Name="CheckGlyph" Height="17" Width="19" Margin="0,0,0,0">
																									<Path Fill="#FFFFFFFF" 
																										  Data="F1 M 145.637,174.227L 127.619,110.39L 180.809,70.7577L 114.528,68.1664L 93.2725,5.33333L 70.3262,67.569L 4,68.3681L 56.0988,109.423L 36.3629,172.75L 91.508,135.888L 145.637,174.227 Z"/>
																								</Viewbox>
																							</Grid>
																						</Grid>
																					</Grid>
																				</ControlTemplate>
																			</Setter.Value>
																		</Setter>
																	</Style>
																</CheckBox.Resources>
															</CheckBox>
														</Grid>
													</Border>
												</DataTemplate>
											</ItemsControl.ItemTemplate>
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<VirtualizingStackPanel/>
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
										</ItemsControl>
									</StackPanel>

									<!-- Show Recents -->
									<StackPanel Visibility="{Binding Path=RecentsCollection.Count, Converter={StaticResource IntegerToVisibilityConverter}}">
										<Border Height="30" HorizontalAlignment="Stretch">
											<TextBlock x:Uid="OutboundRecentsHeader" Text="RECENTS" Foreground="#FF4ebce8" FontSize="15"
													   FontWeight="Bold" Margin="18,0,0,0"
													   FontFamily="Segoe WP"
													   HorizontalAlignment="Left" VerticalAlignment="Center"/>
										</Border>
										<ItemsControl ItemsSource="{Binding Path=RecentsCollection}">
											<ItemsControl.ItemTemplate>
												<DataTemplate>
													<Border Height="60" BorderBrush="#eeeeee" BorderThickness="0,0,0,1" HorizontalAlignment="Stretch"
															Background="{Binding Path=Selected, Converter={StaticResource ItemBackgroundFromSelectionConverter}}">
														<Grid x:Name="ItemGrid" Background="Transparent" IsHitTestVisible="True"
															  HorizontalAlignment="Stretch">
															<TextBlock FontWeight="{Binding Path=Selected, Converter={StaticResource ItemFontWeightFromSelectionConverter}}"  Margin="18,0,0,0"
																	   Text="{Binding Converter={StaticResource SelectedItemToFriendlyTextConverter}, FallbackValue='Alex Reed'}"
																	   FontSize="20" Foreground="#FF000000" 
																	   VerticalAlignment="Center" HorizontalAlignment="Left" />
															<CheckBox HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
																	  IsChecked="{Binding Path=Selected, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle}"
																	  Checked="RecentsBox_OnCheckChanged" Unchecked="RecentsBox_OnCheckChanged" />
														</Grid>
													</Border>
												</DataTemplate>
											</ItemsControl.ItemTemplate>
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<VirtualizingStackPanel/>
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
										</ItemsControl>
									</StackPanel>

									<!-- Friends List -->
									<ItemsPresenter />
								</StackPanel>
							</ScrollViewer>
						</ControlTemplate>
					</ListView.Template>
					<ListView.ItemContainerStyle>
						<Style TargetType="ListViewItem">
							<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
						</Style>
					</ListView.ItemContainerStyle>
					<ListView.GroupStyle>
						<GroupStyle HidesIfEmpty="True" HeaderTemplate="{StaticResource RecipientsListGroupHeaderTemplate}"/>
					</ListView.GroupStyle>
					<ListView.ItemsPanel>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel/>
						</ItemsPanelTemplate>
					</ListView.ItemsPanel>
				</ListView>
			</SemanticZoom.ZoomedInView>
			<SemanticZoom.ZoomedOutView>
				<GridView Background="#AAFFFFFF"
						  ItemsSource="{Binding Source={StaticResource SortedRecipients}, Path=CollectionGroups}"
						  ItemTemplate="{StaticResource RecipientsListJumpTemplate}"
						  VerticalContentAlignment="Top" HorizontalContentAlignment="Center">
				</GridView>
			</SemanticZoom.ZoomedOutView>
		</SemanticZoom>

		<Grid Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch"
			  Background="#FF3cb2e2"
			  Height="60" RenderTransformOrigin="0.5,0.5">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.8*" />
				<ColumnDefinition Width="0.2*" />
			</Grid.ColumnDefinitions>
			<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
				<TextBlock Foreground="#FFFFFFFF" Text="{Binding Path=SelectedRecipients}" 
						   FontFamily="Segoe WP" FontSize="20" FontWeight="SemiBold" Padding="15,0,0,0"
						   VerticalAlignment="Center"/>
			</ScrollViewer>
			<StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right"
					Height="30" Margin="0,0,10,10">
				<Button x:Name="SelectFriendsButton" Style="{StaticResource EmptyButtonStyle}"
						Click="SelectFriendsButton_OnClick">
					<Grid x:Name="SelectFriendsGrid" Margin="0" Width="45" Height="36" RenderTransformOrigin="0.5,0.5">
						<Grid.RenderTransform>
							<CompositeTransform ScaleX="1.2" ScaleY="1.2"/>
						</Grid.RenderTransform>
						<Grid.Triggers>
							<EventTrigger RoutedEvent="Grid.Loaded">
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" 
																	   RepeatBehavior="Forever" Storyboard.TargetName="SelectFriendsPathBackground">
											<EasingDoubleKeyFrame   KeyTime="0:0:0" Value="0"/>
											<EasingDoubleKeyFrame   KeyTime="0:0:0.5" Value="0"/>
											<EasingDoubleKeyFrame   KeyTime="0:0:0.8" Value="1"/>
											<EasingDoubleKeyFrame   KeyTime="0:0:1.1" Value="0"/>
											<EasingDoubleKeyFrame   KeyTime="0:0:1.5" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
																	   RepeatBehavior="Forever" Storyboard.TargetName="SelectFriendsInnerArrowPath">
											<EasingDoubleKeyFrame   KeyTime="0:0:0" Value="0"/>
											<EasingDoubleKeyFrame   KeyTime="0:0:0.3" Value="19.5"/>
											<DiscreteDoubleKeyFrame KeyTime="0:0:0.8" Value="0"/>
											<DiscreteDoubleKeyFrame KeyTime="0:0:1.5" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
						</Grid.Triggers>
						<Path x:Name="SelectFriendsPathBackground" Stroke="White" StrokeThickness="5" Opacity="0"
							  Fill="Transparent" Margin="0,0,0,0"
							  Height="30" Width="36" VerticalAlignment="Center" HorizontalAlignment="Center"
							  Data="M 0,0 L 20,0 32,12 20,24 0,24 12,12 0,0 Z" 
							  StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" RenderTransformOrigin="0.5,0.5">
							<Path.RenderTransform>
								<CompositeTransform ScaleX="1" ScaleY="1"/>
							</Path.RenderTransform>
						</Path>
						<Path x:Name="SelectFriendsPath" Stroke="White" StrokeThickness="3" 
							  Fill="#47FFFFFF"
							  Height="30" Width="36" VerticalAlignment="Center" HorizontalAlignment="Center"
							  Data="M 0,0 L 20,0 32,12 20,24 0,24 12,12 0,0 Z" 
							  StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" RenderTransformOrigin="0.5,0.5">
							<Path.RenderTransform>
								<CompositeTransform ScaleX="1" ScaleY="1"/>
							</Path.RenderTransform>
						</Path>

						<Path x:Name="SelectFriendsInnerArrowPath" Stroke="White" StrokeThickness="3" Margin="5,0,0,0"
							  Height="30" Width="13" VerticalAlignment="Center" HorizontalAlignment="Left"
							  Data="M 0,0 L 12,12 0,24 M 0,0 Z" 
							  StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" RenderTransformOrigin="0.5,0.5">
							<Path.RenderTransform>
								<CompositeTransform TranslateX="0"/>
							</Path.RenderTransform>
						</Path>
					</Grid>
				</Button>
			</StackPanel>
		</Grid>
	</Grid>
</UserControl>
